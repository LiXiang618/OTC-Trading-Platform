<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
       ">  
 
<!-- 建立数据源 -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
   <!-- 数据库驱动，我这里使用的是Mysql数据库 -->
   <property name="driverClassName">
    <value>com.mysql.jdbc.Driver</value>
   </property>
   <!-- 数据库地址，这里也要注意一下编码，不然乱码可是很郁闷的哦！ -->
   <property name="url">
    <value>jdbc:mysql://localhost:3306/otc?useUnicode=true&amp;characterEncoding=UTF-8</value>
   </property>
   <!--dialect,每个数据库对应的Dialet匹配其平台特性-->
   <!-- 
   	<property name="dialect">
  		<value>org.hibernate.dialect.MySQLDialect</value>
  	</property>
   -->
   <!-- 数据库的用户名 -->
   <property name="username">
    <value>root</value>
   </property>
   <!-- 数据库的密码 -->
   <property name="password">
    <value></value>
   </property>
</bean>
<!-- 把数据源注入给Session工厂 -->
<bean id="sessionFactory"
   class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
   <property name="dataSource">
    <ref bean="dataSource" />
   </property>
   <!-- 配置映射文件 -->
   <property name="mappingResources">
    <list>
     <value>domain/Broker.hbm.xml</value>
     <value>domain/Client.hbm.xml</value>
     <value>domain/Commodity.hbm.xml</value>
     <value>domain/HistTrade.hbm.xml</value>
     <value>domain/Transaction.hbm.xml</value>
    </list>
   </property>
   <property name="hibernateProperties">  
   	<props>
   		<prop key="hibernate.dialect">  
   			org.hibernate.dialect.MySQL5Dialect  
        </prop>  
        <!-- <prop key="hibernate.show_sql">true</prop>   -->
        <prop key="hibernate.format_sql">true</prop>  
        <prop key="hibernate.current_session_context_class">
        	org.springframework.orm.hibernate4.SpringSessionContext  
        </prop>  
        <prop key="hibernate.search.lucene_version">LUCENE_36</prop>  
        <prop key="hibernate.search.default.directory_provider">  
        	org.hibernate.search.store.impl.FSDirectoryProvider  
        </prop>
   	</props>  
   </property>   
</bean>
 
<bean id="transactionManager"  
        class="org.springframework.orm.hibernate4.HibernateTransactionManager"  
        p:sessionFactory-ref="sessionFactory" />  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE" />  
            <tx:method name="add*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="create*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="insert*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="update*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="merge*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="del*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="remove*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="put*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="use*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>  
            <tx:method name="get*" propagation="REQUIRED" isolation="REPEATABLE_READ" read-only="true" />  
            <tx:method name="count*" propagation="REQUIRED" isolation="REPEATABLE_READ" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" isolation="REPEATABLE_READ" read-only="true" />  
            <tx:method name="list*" propagation="REQUIRED" isolation="REPEATABLE_READ" read-only="true" />  
            <tx:method name="*" read-only="false" />  
        </tx:attributes>  
    </tx:advice>   

<!-- 把DAO注入给Session工厂 -->
<bean id="brokerDAO" class="dao.BrokerDAO">
   <property name="sessionFactory">
    	<ref bean="sessionFactory" />
   </property>
</bean>
<bean id="clientDAO" class="dao.ClientDAO">
   <property name="sessionFactory">
    	<ref bean="sessionFactory" />
   </property>
</bean>
<bean id="commodityDAO" class="dao.CommodityDAO">
   <property name="sessionFactory">
    	<ref bean="sessionFactory" />
   </property>
</bean>
<bean id="histTradeDAO" class="dao.HistTradeDAO">
   <property name="sessionFactory">
    	<ref bean="sessionFactory" />
   </property>
</bean>
<bean id="transactionDAO" class="dao.TransactionDAO">
   <property name="sessionFactory">
    	<ref bean="sessionFactory" />
   </property>
</bean>

<!-- 把Service注入给DAO -->
<bean id="brokerService" class="service.BrokerService">
   <property name="brokerDAO" ref="brokerDAO" />
</bean>
<bean id="clientService" class="service.ClientService">
   <property name="clientDAO" ref="clientDAO" />
</bean>
<bean id="commodityService" class="service.CommodityService">
   <property name="commodityDAO" ref="commodityDAO" />
</bean>
<bean id="histTradeService" class="service.HistTradeService">
   <property name="histTradeDAO" ref="histTradeDAO" />
</bean>
<bean id="transactionService" class="service.TransactionService">
   <property name="transactionDAO" ref="transactionDAO" />
</bean>

<!-- 把Action注入给Service -->
 <bean id="clientLoginAction" class="action.ClientLogin" scope="prototype">
	<property name="clientService" ref="clientService"></property>
</bean>


</beans>